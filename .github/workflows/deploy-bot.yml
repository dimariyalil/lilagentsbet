name: Deploy Telegram Bot

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é
  schedule:
    - cron: '0 */6 * * *'  # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏

jobs:
  deploy-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 —á–∞—Å–æ–≤ –º–∞–∫—Å–∏–º—É–º
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify environment variables
      run: |
        python -c "
        import os
        required_vars = ['TELEGRAM_BOT_TOKEN', 'ANTHROPIC_API_KEY']
        for var in required_vars:
            if not os.getenv(var):
                print(f'ERROR: {var} is not set')
                exit(1)
            else:
                print(f'‚úì {var} is set (length: {len(os.getenv(var))})')
        print('All required environment variables are configured')
        "
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_ADMIN_ID: ${{ secrets.TELEGRAM_ADMIN_ID }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
    
    - name: Run bot with auto-restart
      run: |
        echo "üöÄ Starting Telegram bot at $(date)"
        
        # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
        run_bot_with_restart() {
          local restart_count=0
          local max_restarts=10
          
          while [ $restart_count -lt $max_restarts ]; do
            echo "Starting bot attempt $((restart_count + 1)) at $(date)"
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º 30 –º–∏–Ω—É—Ç
            timeout 1800 python src/main.py &
            BOT_PID=$!
            
            # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
            wait $BOT_PID
            exit_code=$?
            
            if [ $exit_code -eq 0 ]; then
              echo "Bot exited normally"
              break
            elif [ $exit_code -eq 124 ]; then
              echo "Bot timeout reached, restarting..."
            else
              echo "Bot exited with error code $exit_code, restarting..."
            fi
            
            restart_count=$((restart_count + 1))
            echo "Waiting 10 seconds before restart..."
            sleep 10
          done
          
          echo "Bot execution completed or max restarts reached"
        }
        
        run_bot_with_restart
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_ADMIN_ID: ${{ secrets.TELEGRAM_ADMIN_ID }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        LOG_LEVEL: INFO
        PYTHONUNBUFFERED: 1
        
    - name: Log completion
      run: |
        echo "‚úÖ Bot workflow completed at $(date)"